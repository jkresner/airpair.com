<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
  {{#with viewData}}{{> pageMeta }}{{/with}}
  <link rel="stylesheet" href="/v1/lib/bootstrap/bootstrap.css" type="text/css" />
  <link rel="stylesheet" href="/v1/lib/prism/prism.css" type="text/css" />  
  <link rel='stylesheet' href='/v1/css/index.css' type='text/css' media='all' />
  <link rel='stylesheet' id='google-font-css'  href='//fonts.googleapis.com/css?family=Open+Sans%3A300%2C400%2C700&#038;ver=2.0.1' type='text/css' media='all' />
</head>
<body>

{{> siteHeader }}

{{#with viewData}}
<div class="main-wrap">
  <main ng-view>
    <header class="entry-header">
      <p class="entry-meta">
        <a href="/posts">Posts</a>
        &nbsp; > &nbsp;
        <span class="entry-author" itemprop="author" itemscope="itemscope" itemtype="//schema.org/Person">
        {{#if by.username}}
          <a href="/me/{{by.username}}" class="entry-author-link" itemprop="url" rel="author" target="_self"><span class="entry-author-name" itemprop="name">{{by.name}}</span></a>
        {{else}}
          <span class="entry-author-name" itemprop="name">{{by.name}}</span>
        {{/if}}
        </span>
        &nbsp; > &nbsp;
        <time class="entry-time" itemprop="datePublished" datetime="{{ isoMoment published }}">{{ dateFormat published 'DD MMM, YYYY' }}
        </time> 
        
      </p>
    </header>
    <article class="blogpost">
      <h1 class="entry-title" itemprop="headline">{{ title }}</h1> 

      <div class="pw-widget pw-counter-vertical" pw:twitter-via="airpair">   
        <a class="pw-button-facebook pw-look-native"></a>     
        <a class="pw-button-twitter pw-look-native"></a>      
        <a class="pw-button-linkedin pw-look-native"></a>     
      </div>
      <script type="text/javascript ">  </script>

      <h4 id="table-of-contents">Table of Contents</h4>
      {{{toc}}}
      <figure class="author">
        <img alt="{{by.name}}" src="{{by.avatar}}?s=100">
        <figcaption>
          {{by.bio}}
        </figcaption>
      </figure>  
      {{#if assetUrl }}
      <p class="asset">{{ assetUrlToMedia assetUrl }}</p>
      {{/if}}
      <hr />

      {{{ html }}}

      <div id="disqus_thread"></div>
      
    </article>
  </main>
</div>
{{/with}}
  
{{!-- sideNavFull --}}
{{!-- sideChatFull --}}

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript" src="/v1/lib/prism/prism.js"></script>   
<script type="text/javascript">

var postHlpr = {}

var getHighlightConfig = function(elm) {
  var cfg = {};
  var prevSibling = elm.previousSibling;
  var nodeValue = null;
  while (prevSibling && prevSibling.nodeType!==1) {
      if (prevSibling.nodeType === 8) {
          nodeValue = prevSibling.nodeValue;   
      }
      prevSibling = prevSibling.previousSibling;
  }        

  if (nodeValue)
  {
    var lang = nodeValue.match(/lang=\w+/i)
    if (lang) {
      cfg.lang = lang[0].replace('lang=','');  
    }
    var linenums = (nodeValue.match(/linenums=true+/i)||[])[0];
    if (linenums)
    {
      cfg.linenums = true;   
    }
  }

  // console.log(nodeValue, cfg);
  return cfg;
}


window.postHlpr.highlightSyntax = function(opts) {
  var elements = document.querySelectorAll('pre > code')
  // console.log('Prism.highlightElement', elements);
  for (var i=0, element; element = elements[i++];) {
    var config = getHighlightConfig(element.parentNode);
    if (!config || !config.lang) { return }

    if (config.linenums)
    {
      element.parentNode.className = 'line-numbers'
    }
    // console.log('Prism.highlightElement', element, config);
    
    element.className = 'language-'+config.lang
    Prism.highlightElement(element, false, function() {
      if (opts && opts.addCtrs)
      {
        element.outerHTML+='<footer>Get expert <a class="trackPostCTA" href="/find-an-expert?utm_source=ap-post">'+config.lang+' help</a></footer>'
      }
    });
  }
}

window.postHlpr.loadDisqus = function()
{
  (function() {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'https://airpairblog.disqus.com/embed.js';
      
      var x = document.getElementsByTagName('script')[0]; 
      x.parentNode.insertBefore(dsq, x); 
  })();    
}

window.postHlpr.loadPoSt = function()
{
  window.pwidget_config = { shareQuote: false, afterShare: false };
  var p = document.createElement('script'); 
  p.type = 'text/javascript'; 
  p.async = true;
  p.src = ('https:' == document.location.protocol ? 'https://s' : 'http://i')
    + '.po.st/static/v3/post-widget.js#publisherKey=miu9e01ukog3g0nk72m6&retina=true';
  
  var x = document.getElementsByTagName('script')[0]; 
  x.parentNode.insertBefore(p, x); 
}



  function fixNavs(elmId)
  {
    var scrollingOn = $(document).width() > 900;
    var offset = $('#sideNav').offset().top;
    $(window).scroll(function(e){
      if (window.scrollY < offset) {
        $(elmId).css('top', offset - window.scrollY);
      } else if (scrollingOn) {
        $(elmId).css('top', 0);
      }
    });
  }

  function fixRail()
  {
    var scrollingOn = $(document).width() > 900;
    var offset = $('.pw-widget').offset().top;
    $(window).scroll(function(e)
    {
      if (window.scrollY < offset) {
        $('.pw-widget').css('top', 0);
        $('#table-of-contents').css('top', 0);
        $('#table-of-contents + ul').css('top', 0);        
      } 
      else if (scrollingOn)
      {
        $('.pw-widget').css('top', window.scrollY - 150);
        $('#table-of-contents').css('top', window.scrollY - 160);
        $('#table-of-contents + ul').css('top', window.scrollY - 160);     
      }
    });
  }

  $(function() {    
    // fixNavs('#sideNav,#sideChat');
    fixRail();
    postHlpr.loadPoSt();
    postHlpr.highlightSyntax({ addCtrs: true });
    postHlpr.loadDisqus();
  });

  function bindTracking() {
    $.each($('.trackPostCTA'), function(idx,el){
      $(el).click(function (e) {
        analytics.track('Click', { type: 'Post CTA', unit: 'code footer', idx: idx, text: el.innerHTML, location: window.location.pathname });
        
        setTimeout(function () {
          window.location.href = $(el).attr('href');
        }, 250);
        
        return false;
      });
    })
  }

</script>

{{> initPage }}
</body>
</html>